# PEP 518, 621, 639 (draft)

[project]
name = "curldl"
version = "0.1.0"
description = "Safely and reliably download files with PycURL"
keywords = ["cURL", "PycURL", "download"]

readme = "README.md"
license = {text = "LGPL-3.0-or-later"}

authors = [{name = "Michael Orlov", email = "orlovm@noexec.org"}]
classifiers = [
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 4 - Beta"
]

requires-python = ">=3.8"
dependencies = [
    "pycurl",               # PycURL wrapper for cURL library
    "tenacity",             # retry policies
    "toml",                 # reading project.version from this file
    "tqdm"                  # console progress bar
]

[project.optional-dependencies]
environment = [
    "ipython",              # interactive Python environment
    "pipdeptree",           # show packages dependency tree
    "pip-autoremove"        # remove unused package dependencies
]

test = [
    "cli-test-helpers",     # CLI entry point testing
    "pytest",               # pytest testing framework
    "pytest-cov",           # code coverage (--cov)
    "pytest-datadir",
    "pytest-localserver",
    "pytest-mock",          # mocker fixtures
    "pytest-mypy",          # type hinting verifier (--mypy)
    "pytest-pylint",        # linter (--pylint)
    "pytest-regressions",
    "pytest-repeat",        # repeating tests (@pytest.mark.repeat)
    "pytest-subtests",
    "pytest-sugar",         # look-and-feel for pytest progress
    "pytest-timeout",
    "types-pycurl",         # pycurl type hints for mypy
    "types-toml"            # toml type hints for mypy
]

[project.urls]
repository = "https://github.com/noexec/curldl"

[project.scripts]
curldl = "curldl.cli:main"

[build-system]
requires = ["setuptools", "wheel"]

[tool.setuptools.package-data]
"curldl" = ["py.typed"]     # PIP 561

[tool.pytest.ini_options]
addopts = "--mypy --pylint --cov --cov-report=term --cov-report=html"
pythonpath = ["src"]
testpaths = ["tests", "src"]
cache_dir = "build/tests/pytest_cache"

filterwarnings = [
    "default",
    "ignore::DeprecationWarning:pytest_pylint.plugin",          # pytest-pylint 0.19.0
    "ignore::DeprecationWarning:pytest_pylint.pylint_util"      # pytest-pylint 0.19.0
]

[tool.pylint.main]
py-version = "3.8"

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = 120

[tool.pylint.design]
min-public-methods = 1
max-args = 8

[tool.mypy]
warn_unused_configs = true
cache_dir = "build/tests/mypy_cache"

allow_redefinition = true
warn_unreachable = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_incomplete_stub = true

disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true

[tool.coverage.run]
data_file = "build/tests/coverage.sqlite"
omit = ["/etc/*"]

branch = true
dynamic_context = "test_function"

[tool.coverage.report]
fail_under = 95
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "build/tests/htmlcov"
show_contexts = true
skip_covered = false
