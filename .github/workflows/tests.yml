name: Tests with Coverage and Static Analysis

on:
    pull_request:
    push:
        branches:
            - master
            - develop
            - 'release/**'
            - 'workflow/**'

jobs:
    test-venv:
        strategy:
            matrix:
                python-version: ['3.11', '3.10', '3.9', '3.8', 'pypy3.9', 'pypy3.8']
                platform: [ubuntu, windows]
                architecture: [x64, x86]
                exclude:
                    - platform: ubuntu
                      architecture: x86
                    - platform: windows
                      python-version: '3.10'
                    - platform: windows
                      python-version: '3.9'
                    - platform: windows
                      python-version: 'pypy3.9'
                    - platform: windows
                      python-version: 'pypy3.8'

        name: Test Python ${{ matrix.python-version }}-${{ matrix.platform }}-${{ matrix.architecture }} / venv
        runs-on: ${{ matrix.platform }}-latest

        steps:
            - name: Check out repository and assets
              uses: actions/checkout@v3
              with:
                  persist-credentials: false
                  submodules: recursive

            - name: Install required Ubuntu packages
              if: ${{ matrix.platform == 'ubuntu' }}
              run: |
                  sudo -n apt-get update -y
                  sudo -n apt-get install -y --no-upgrade libcurl4-openssl-dev

            - name: Set up Python ${{ matrix.python-version }}-${{ matrix.architecture }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
                  architecture: ${{ matrix.architecture }}

            - name: Install package in editable mode and its dependencies
              shell: sh
              run: ./venv.sh install-venv

            - name: Disable static analysis coverage on PyPy
              if: startsWith(matrix.python-version, 'pypy')
              run: sed -i "/^addopts\>/s/^/#/" pyproject.toml

            - name: Tests with code coverage and pylint + mypy static analysis
              id: test
              shell: sh
              run: ./venv.sh pytest

            - name: Archive code coverage report
              if: (success() || steps.test.conclusion == 'failure') && !startsWith(matrix.python-version, 'pypy')
              uses: actions/upload-artifact@v3
              with:
                  name: coverage-report-${{ github.job }}-${{ matrix.python-version }}-${{ matrix.platform }}-${{ matrix.architecture }}
                  path: build/tests/htmlcov/

            - name: Security issues static analysis
              shell: sh
              run: ./venv.sh bandit -c pyproject.toml -r .

            - name: Reinstall minimal required package versions
              if: ${{ matrix.platform != 'windows' }}
              shell: sh
              run: ./venv.sh downgrade-venv

            - name: Same tests as before, on minimal required package versions
              if: ${{ matrix.platform != 'windows' }}
              shell: sh
              run: |
                  rm -r build/tests
                  ./venv.sh pytest

    test-platform-packages:
        strategy:
            matrix:
                platform-image: [ubuntu-latest, ubuntu-20.04]

        name: Test Linux / ${{ matrix.platform-image }} / platform
        runs-on: ${{ matrix.platform-image }}

        steps:
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  persist-credentials: false

            - name: Install maximal subset of platform Python packages
              run: |
                  sudo -n apt-get update -y
                  sudo -n apt-get install -y --no-upgrade libcurl4-openssl-dev
                  sudo -n apt-get install -y python3-{pycurl,tenacity,tqdm}
                  sudo -n apt-get install -y python3-{bandit,filelock,mypy,pytest,setuptools-scm,toml,werkzeug,wheel}
                  sudo -n apt-get install -y python3-pytest-{cov,pylint,sugar,xdist}
                  sudo -n apt-get install -y python3-pytest-repeat || :

            - name: Install package and its platform-unavailable dependencies
              run: |
                  pip3 install --user -U pip
                  pip3 install --user --use-pep517 '.[test]'
                  find src -mindepth 1 -delete

            - name: Tests with essentially no static analysis
              run: pytest-3 --no-cov

    test-dependency-sanity:
        name: Test Sanity on Linux / platform
        runs-on: ubuntu-latest

        steps:
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  persist-credentials: false

            - name: Install minimal subset of platform Python packages
              run: |
                  sudo -n apt-get update -y
                  sudo -n apt-get install -y python3-{pycurl,tenacity,tqdm}

            - name: Install package and clean out repository files
              run: |
                  pip3 install --user -U pip
                  pip3 install --user --use-pep517 --no-deps .
                  find . -mindepth 1 -delete

            - name: Sanity tests for package availability
              run: |
                  curldl -h
                  curldl -V
                  curldl -vpo test.html https://github.com/
